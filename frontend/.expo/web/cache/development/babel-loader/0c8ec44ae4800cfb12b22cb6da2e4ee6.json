{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/simcoder/Desktop/InstagramClone/components/main/Add.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Camera, {\n    style: fixedRatio,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0.1,\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \" Flip \")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  fixedRatio: {\n    backgroundColor: 'rebeccapurple',\n    flex: 1,\n    aspectRatio: 1\n  },\n  center: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["/home/simcoder/Desktop/InstagramClone/components/main/Add.js"],"names":["React","useState","useEffect","Camera","App","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","container","fixedRatio","flex","alignSelf","alignItems","front","fontSize","marginBottom","color","styles","StyleSheet","create","flexDirection","justifyContent","backgroundColor","aspectRatio","center"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACgBH,QAAQ,CAAC,IAAD,CADxB;AAAA;AAAA,MACnBI,aADmB;AAAA,MACJC,gBADI;;AAAA,mBAEFL,QAAQ,CAACE,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAFN;AAAA;AAAA,MAEnBC,IAFmB;AAAA,MAEbC,OAFa;;AAI1BT,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC4BC,MAAM,CAACS,uBAAP,EAD5B;;AAAA;AAAA;AACWC,cAAAA,MADX,yBACWA,MADX;AAEGP,cAAAA,gBAAgB,CAACO,MAAM,KAAK,SAAZ,CAAhB;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AACxB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,UAAf;AAA2B,IAAA,IAAI,EAAEL,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,IAAI,EAAE,GADH;AAEHC,MAAAA,SAAS,EAAE,UAFR;AAGHC,MAAAA,UAAU,EAAE;AAHT,KADX;AAMI,IAAA,OAAO,EAAE,mBAAM;AACXP,MAAAA,OAAO,CACHD,IAAI,KAAKP,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACMN,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBW,KAD5B,GAEMhB,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAHzB,CAAP;AAKH,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,YAAY,EAAE,EAA9B;AAAkCC,MAAAA,KAAK,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAFJ,CADJ;AAoBH;AACD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACPE,IAAAA,IAAI,EAAE,CADC;AAEPU,IAAAA,aAAa,EAAE,KAFR;AAGPR,IAAAA,UAAU,EAAE,YAHL;AAIPS,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,eAAe,EAAE;AALV,GADkB;AAQ7Bb,EAAAA,UAAU,EAAE;AACRa,IAAAA,eAAe,EAAE,eADT;AAERZ,IAAAA,IAAI,EAAE,CAFE;AAGRa,IAAAA,WAAW,EAAE;AAHL,GARiB;AAa7BC,EAAAA,MAAM,EAAE;AACJd,IAAAA,IAAI,EAAE,CADF;AAEJU,IAAAA,aAAa,EAAE,KAFX;AAGJR,IAAAA,UAAU,EAAE,QAHR;AAIJS,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,eAAe,EAAE;AALb;AAbqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\nimport { Camera } from 'expo-camera';\n\nexport default function App() {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [type, setType] = useState(Camera.Constants.Type.back);\n\n    useEffect(() => {\n        (async () => {\n            const { status } = await Camera.requestPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []);\n\n    if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={container}>\n            <Camera style={fixedRatio} type={type}/>\n            <TouchableOpacity\n                style={{\n                    flex: 0.1,\n                    alignSelf: 'flex-end',\n                    alignItems: 'center',\n                }}\n                onPress={() => {\n                    setType(\n                        type === Camera.Constants.Type.back\n                            ? Camera.Constants.Type.front\n                            : Camera.Constants.Type.back\n                    );\n                }}>\n                <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        backgroundColor: 'white'\n    },\n    fixedRatio: {\n        backgroundColor: 'rebeccapurple',\n        flex: 1,\n        aspectRatio: 1\n    },\n    center: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n    }\n});\n"]},"metadata":{},"sourceType":"module"}