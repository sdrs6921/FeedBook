{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/auth/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport background from \"../../assets/LoginBackgroud.png\";\nimport firebase from 'firebase';\nimport Landing from \"./Landing\";\nexport var Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        source: background,\n        style: styles.backgroundContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.textInputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"E-mail\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return onSignUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"\\uB85C\\uADF8\\uC778\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  backgroundContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  textInput: {\n    width: '80%',\n    height: 70,\n    justifyContent: \"center\",\n    marginLeft: 20,\n    marginRight: 20\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#03D37C',\n    height: 50,\n    marginLeft: 20,\n    marginRight: 20,\n    borderRadius: 20\n  },\n  textInputContainer: {\n    width: '80%',\n    marginBottom: 50\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/auth/Login.js"],"names":["React","Component","background","firebase","Landing","Login","props","state","email","password","onSignUp","bind","auth","signInWithEmailAndPassword","then","result","console","log","catch","error","styles","backgroundContainer","container","textInputContainer","textInput","setState","button","text","StyleSheet","create","flex","justifyContent","width","height","marginLeft","marginRight","alignItems","backgroundColor","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, TouchableOpacity ,StyleSheet, View, Button, TextInput, ImageBackground } from 'react-native'\nimport background from '../../assets/LoginBackgroud.png'\nimport firebase from 'firebase'\nimport Landing from './Landing'\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n        }\n\n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    onSignUp() {\n        const { email, password } = this.state;\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                console.log(result)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    render() {\n        return (\n            <ImageBackground source={background} style={styles.backgroundContainer}>\n                <View style={styles.container}>\n                    <View style={styles.textInputContainer}>\n                        <TextInput\n                            style={styles.textInput}\n                            placeholder=\"E-mail\"\n                            onChangeText={(email) => this.setState({ email })}\n                        />\n\n                        <TextInput\n                            style={styles.textInput}\n                            placeholder=\"비밀번호\"\n                            secureTextEntry={true}\n                            onChangeText={(password) => this.setState({ password })}\n                        />\n                    </View>\n                    <TouchableOpacity \n                        style = {styles.button}\n                        onPress={() => onSignUp()}>\n                    <Text style = {styles.text}>로그인</Text>\n                </TouchableOpacity>\n                </View>\n            </ImageBackground>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        \n        justifyContent: 'center',\n\n    },\n    backgroundContainer : {\n        flex : 1,\n        justifyContent : 'center',\n        \n    },\n    textInput: {\n        width: '80%',\n        height: 70,\n        justifyContent: \"center\",\n        marginLeft : 20,\n        marginRight : 20\n    },\n    button: {\n        alignItems : 'center',\n        justifyContent : 'center',\n        backgroundColor : '#03D37C',\n        height : 50,\n        marginLeft : 20,\n        marginRight : 20,\n        borderRadius : 20\n        \n    },\n    textInputContainer : {\n        width : '80%',\n        marginBottom : 50,\n        \n    }\n});\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}