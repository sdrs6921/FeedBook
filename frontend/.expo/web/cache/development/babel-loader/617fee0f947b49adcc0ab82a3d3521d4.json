{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/main/Save.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase';\nimport { NavigationContainer } from '@react-navigation/native';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      author = _useState6[0],\n      setAuthor = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      theme = _useState8[0],\n      setTheme = _useState8[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp(),\n      title: title,\n      author: author,\n      theme: theme\n    }).then(function () {\n      props.navigation.popToTop();\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.textInputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"\\uC81C\\uBAA9\",\n    onChangeText: function onChangeText(title) {\n      return setTitle(title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"\\uC9C0\\uC740\\uC774\",\n    onChangeText: function onChangeText(author) {\n      return setAuthor(author);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"\\uC7A5\\uB974\",\n    onChangeText: function onChangeText(theme) {\n      return setTheme(theme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"\\uCC45\\uC758 \\uB290\\uB08C\\uC744 \\uB9D0\\uD574\\uC8FC\\uC138\\uC694..\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    title: \"\\uC800\\uC7A5\\uD558\\uAE30\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignContent: 'center'\n  },\n  image: {\n    width: 300,\n    height: 300\n  },\n  textInputContainer: {\n    marginBottom: 20,\n    marginLeft: 20\n  },\n  textInput: {\n    height: 40,\n    fontSize: 20,\n    marginBottom: 10\n  },\n  imageContainer: {\n    marginTop: 20,\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/main/Save.js"],"names":["React","useState","firebase","NavigationContainer","require","Save","props","caption","setCaption","title","setTitle","author","setAuthor","theme","setTheme","uploadImage","uri","route","params","image","childPath","auth","currentUser","uid","Math","random","toString","console","log","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","creation","FieldValue","serverTimestamp","navigation","popToTop","styles","container","imageContainer","textInputContainer","textInput","StyleSheet","create","flex","alignContent","width","height","marginBottom","marginLeft","fontSize","marginTop","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, TextInput, Image, Button, StyleSheet } from 'react-native'\n\nimport firebase from 'firebase'\nimport { NavigationContainer } from '@react-navigation/native'\nrequire(\"firebase/firestore\")\nrequire(\"firebase/firebase-storage\")\n\n\nexport default function Save(props) {\n    const [caption, setCaption] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n    const [theme, setTheme] = useState(\"\")\n\n    const uploadImage = async () => {\n        const uri = props.route.params.image;\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\n        console.log(childPath)\n\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const task = firebase\n            .storage()\n            .ref()\n            .child(childPath)\n            .put(blob);\n\n        const taskProgress = snapshot => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n\n        const taskCompleted = () => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                savePostData(snapshot);\n                console.log(snapshot)\n            })\n        }\n\n        const taskError = snapshot => {\n            console.log(snapshot)\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n    }\n\n    const savePostData = (downloadURL) => {\n\n        firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userPosts\")\n            .add({\n                downloadURL,\n                caption,\n                likesCount: 0,\n                creation: firebase.firestore.FieldValue.serverTimestamp(),\n                title,\n                author,\n                theme\n            }).then((function () {\n                props.navigation.popToTop()\n            }))\n    }\n    return (\n        <View style={styles.container}>\n            <View style = {styles.imageContainer}>\n            <Image source={{ uri: props.route.params.image }} style = {styles.image} />\n            </View>\n            <View style = {styles.textInputContainer}>\n            <TextInput\n                style = {styles.textInput}\n                placeholder=\"제목\"\n                onChangeText={(title) => setTitle(title)}/>\n            \n            <TextInput\n                style = {styles.textInput}\n                placeholder=\"지은이\"\n                onChangeText={(author) => setAuthor(author)}\n            />\n            <TextInput\n                style = {styles.textInput}\n                placeholder=\"장르\"\n                onChangeText={(theme) => setTheme(theme)}\n            />\n            <TextInput\n                style = {styles.textInput}\n                placeholder=\"책의 느낌을 말해주세요..\"\n                onChangeText={(caption) => setCaption(caption)}\n            />\n            </View>\n            <Button title=\"저장하기\" onPress={() => uploadImage()} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container : {\n        flex : 1,\n        alignContent : 'center',\n        \n        \n    },\n    image : {\n        width : 300,\n        height : 300,\n    },\n    textInputContainer : {\n        marginBottom : 20,\n        marginLeft : 20\n    },\n    textInput : {\n        height : 40,\n        fontSize : 20,\n        marginBottom : 10\n    },\n    imageContainer : {\n        marginTop : 20,\n        alignItems : 'center',\n        marginBottom : 10\n    }\n})\n"]},"metadata":{},"sourceType":"module"}