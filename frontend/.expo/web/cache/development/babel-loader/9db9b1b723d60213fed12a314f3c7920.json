{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/simcoder/Desktop/InstagramClone/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          currentUser = _this$props.currentUser;\n      return React.createElement(Tab.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/home/simcoder/Desktop/InstagramClone/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","FeedScreen","ProfileScreen","Tab","createMaterialBottomTabNavigator","EmptyScreen","Main","props","navigation","currentUser","tabBarIcon","color","size","tabPress","event","preventDefault","navigate","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser } from '../redux/actions/index'\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return (null)\n}\n\nexport class Main extends Component {\n    componentDidMount() {\n        this.props.fetchUser();\n    }\n    render() {\n        const { navigation, currentUser } = this.props\n\n        return (\n\n            <Tab.Navigator>\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Add\" component={EmptyScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Add\")\n                        }\n                    })}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Profile\" component={ProfileScreen}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\n                        ),\n                    }} />\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}