{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/main/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nexport default function Search(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection('users').where('name', '>=', search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      backgroundColor: '#03D37C'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(AntDesign, {\n    name: \"search1\",\n    size: 24,\n    color: \"black\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10,\n      marginTop: 7\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"\\uCE5C\\uAD6C \\uAC80\\uC0C9\",\n    style: {\n      color: 'white',\n      height: 40\n    },\n    onChangeText: function onChangeText(search) {\n      return fetchUsers(search);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, item.name));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heesang/dev/dev_react_native/feed_book_app/frontend/components/main/Search.js"],"names":["React","useState","AntDesign","firebase","require","Search","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","flexDirection","backgroundColor","marginLeft","marginRight","marginTop","color","height","item","navigation","navigate","uid","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,kBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MAC3BM,KAD2B;AAAA,MACpBC,QADoB;;AAGlC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3BP,IAAAA,QAAQ,CAACQ,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,KAFL,CAEW,MAFX,EAEmB,IAFnB,EAEyBH,MAFzB,EAGKI,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,UAAIT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACjC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBD,IAAhB;AACH,OAJW,CAAZ;AAKAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAXL;AAYH,GAbD;;AAcA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI;AAACe,MAAAA,aAAa,EAAG,KAAjB;AAAwBC,MAAAA,eAAe,EAAG;AAA1C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,OAA1C;AACI,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAG,EAAd;AAAkBC,MAAAA,WAAW,EAAG,EAAhC;AAAoCC,MAAAA,SAAS,EAAG;AAAhD,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,2BADhB;AAEI,IAAA,KAAK,EAAI;AAACC,MAAAA,KAAK,EAAG,OAAT;AAAkBC,MAAAA,MAAM,EAAG;AAA3B,KAFb;AAGI,IAAA,YAAY,EAAE,sBAAClB,MAAD;AAAA,aAAYD,UAAU,CAACC,MAAD,CAAtB;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADJ,EASI,oBAAC,QAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,UAAU,EAAE,KAFhB;AAGI,IAAA,IAAI,EAAEH,KAHV;AAII,IAAA,UAAU,EAAE;AAAA,UAAGsB,IAAH,QAAGA,IAAH;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMvB,KAAK,CAACwB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AAACC,YAAAA,GAAG,EAAEH,IAAI,CAACR;AAAX,WAArC,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOQ,IAAI,CAACI,IAAZ,CAFJ,CADQ;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAwBH","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native'\nimport { AntDesign } from '@expo/vector-icons';\nimport firebase from 'firebase';\nrequire('firebase/firestore');\n\nexport default function Search(props) {\n    const [users, setUsers] = useState([])\n\n    const fetchUsers = (search) => {\n        firebase.firestore()\n            .collection('users')\n            .where('name', '>=', search)\n            .get()\n            .then((snapshot) => {\n                let users = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                });\n                setUsers(users);\n            })\n    }\n    return (\n        <View>\n            <View style = {{flexDirection : 'row', backgroundColor : '#03D37C'}}>\n            <AntDesign name=\"search1\" size={24} color=\"black\" \n                style = {{marginLeft : 10, marginRight : 10, marginTop : 7}}/>\n            <TextInput\n                placeholder=\"친구 검색\"\n                style = {{color : 'white', height : 40}}\n                onChangeText={(search) => fetchUsers(search)} />\n            </View>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={users}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        onPress={() => props.navigation.navigate(\"Profile\", {uid: item.id})}>\n                        <Text>{item.name}</Text>\n                    </TouchableOpacity>\n\n                )}\n            />\n        </View>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}