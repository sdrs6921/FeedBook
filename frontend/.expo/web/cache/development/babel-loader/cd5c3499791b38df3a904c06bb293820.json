{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/simcoder/Desktop/InstagramClone/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAGV2HfQSQtFCjD9xbu4RDUiTewa7is8O8\",\n  authDomain: \"instagram-dev-8b9c4.firebaseapp.com\",\n  databaseURL: \"https://instagram-dev-8b9c4.firebaseio.com\",\n  projectId: \"instagram-dev-8b9c4\",\n  storageBucket: \"instagram-dev-8b9c4.appspot.com\",\n  messagingSenderId: \"386631361638\",\n  appId: \"1:386631361638:web:d25aa4b5ec7911c57679a7\",\n  measurementId: \"G-GQYEJ3XWBV\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        ref: navigationRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/home/simcoder/Desktop/InstagramClone/App.js"],"names":["StatusBar","React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigationRef"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\n\nimport { View, Text } from 'react-native'\n\nimport * as firebase from 'firebase'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAGV2HfQSQtFCjD9xbu4RDUiTewa7is8O8\",\n  authDomain: \"instagram-dev-8b9c4.firebaseapp.com\",\n  databaseURL: \"https://instagram-dev-8b9c4.firebaseio.com\",\n  projectId: \"instagram-dev-8b9c4\",\n  storageBucket: \"instagram-dev-8b9c4.appspot.com\",\n  messagingSenderId: \"386631361638\",\n  appId: \"1:386631361638:web:d25aa4b5ec7911c57679a7\",\n  measurementId: \"G-GQYEJ3XWBV\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LandingScreen from './components/auth/Landing'\nimport RegisterScreen from './components/auth/Register'\nimport LoginScreen from './components/auth/Login'\nimport MainScreen from './components/Main'\nimport AddScreen from './components/main/Add'\n\n\nconst Stack = createStackNavigator();\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return (\n        <View style={{ flex: 1, justifyContent: 'center' }}>\n          <Text>Loading</Text>\n        </View>\n      )\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Landing\">\n            <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <NavigationContainer ref={navigationRef}>\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen name=\"Main\" component={MainScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Add\" component={AddScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n\n      </Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}